name: Debug - Check Target Repository Workflow

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  debug-target-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Check if target workflow file exists
        run: |
          echo "üîç Checking if workflow file exists in target repository..."
          
          # Check the main branch for workflow files
          response=$(curl -s -H "Authorization: token ${{ secrets.TEST_REPO_TOKEN }}" \
            "https://api.github.com/repos/Arijit06/CI-CD-Integration-with-Selenium-Java-/contents/.github/workflows")
          
          echo "Workflow files in target repository:"
          echo "$response" | jq -r '.[].name' 2>/dev/null || echo "No workflow files found or error occurred"
          
      - name: Check specific workflow file
        run: |
          echo "üîç Checking for test-on-deployment.yml specifically..."
          
          response=$(curl -s -w "HTTP_STATUS:%{http_code}" -H "Authorization: token ${{ secrets.TEST_REPO_TOKEN }}" \
            "https://api.github.com/repos/Arijit06/CI-CD-Integration-with-Selenium-Java-/contents/.github/workflows/test-on-deployment.yml")
          
          http_status=$(echo $response | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)
          body=$(echo $response | sed -E 's/HTTP_STATUS:[0-9]*$//')
          
          if [ "$http_status" -eq 200 ]; then
            echo "‚úÖ test-on-deployment.yml exists!"
            echo "File details:"
            echo "$body" | jq -r '.name, .path, .sha' 2>/dev/null
          else
            echo "‚ùå test-on-deployment.yml not found (HTTP $http_status)"
            echo "Response: $body"
          fi
          
      - name: List all workflow files in target repo
        run: |
          echo "üîç Complete list of workflow files..."
          
          curl -s -H "Authorization: token ${{ secrets.TEST_REPO_TOKEN }}" \
            "https://api.github.com/repos/Arijit06/CI-CD-Integration-with-Selenium-Java-/contents/.github/workflows" \
            | jq -r '.[] | "Name: \(.name), Path: \(.path), Size: \(.size) bytes"' 2>/dev/null || echo "Could not list workflow files"
      
      - name: Check repository_dispatch in workflow content
        run: |
          echo "üîç Checking workflow content for repository_dispatch..."
          
          # Get the content of the workflow file
          response=$(curl -s -H "Authorization: token ${{ secrets.TEST_REPO_TOKEN }}" \
            -H "Accept: application/vnd.github.v3.raw" \
            "https://api.github.com/repos/Arijit06/CI-CD-Integration-with-Selenium-Java-/contents/.github/workflows/test-on-deployment.yml")
          
          if echo "$response" | grep -q "repository_dispatch"; then
            echo "‚úÖ Found 'repository_dispatch' in workflow file"
            echo "Lines containing repository_dispatch:"
            echo "$response" | grep -n "repository_dispatch" || true
          else
            echo "‚ùå 'repository_dispatch' not found in workflow file"
            echo "First 20 lines of the file:"
            echo "$response" | head -20
          fi
          
          if echo "$response" | grep -q "portfolio-updated"; then
            echo "‚úÖ Found 'portfolio-updated' event type"
          else
            echo "‚ùå 'portfolio-updated' event type not found"
          fi
      
      - name: Test alternative API endpoints
        run: |
          echo "üîç Testing alternative approaches..."
          
          # Try to get repository info
          echo "Repository info:"
          curl -s -H "Authorization: token ${{ secrets.TEST_REPO_TOKEN }}" \
            "https://api.github.com/repos/Arijit06/CI-CD-Integration-with-Selenium-Java-" \
            | jq -r '.name, .default_branch, .private' 2>/dev/null || echo "Could not get repo info"
          
          # Check if there are any workflows at all
          echo "All workflows:"
          curl -s -H "Authorization: token ${{ secrets.TEST_REPO_TOKEN }}" \
            "https://api.github.com/repos/Arijit06/CI-CD-Integration-with-Selenium-Java-/actions/workflows" \
            | jq -r '.workflows[] | "ID: \(.id), Name: \(.name), Path: \(.path), State: \(.state)"' 2>/dev/null || echo "Could not list workflows"
      
      - name: Test repository dispatch manually
        run: |
          echo "üß™ Testing repository dispatch with minimal payload..."
          
          response=$(curl -s -w "HTTP_STATUS:%{http_code}" -X POST \
            -H "Authorization: token ${{ secrets.TEST_REPO_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            "https://api.github.com/repos/Arijit06/CI-CD-Integration-with-Selenium-Java-/dispatches" \
            -d '{
              "event_type": "test-dispatch"
            }')
          
          http_status=$(echo $response | grep -o "HTTP_STATUS:[0-9]*" | cut -d: -f2)
          body=$(echo $response | sed -E 's/HTTP_STATUS:[0-9]*$//')
          
          echo "Test dispatch result: HTTP $http_status"
          if [ "$http_status" -eq 204 ]; then
            echo "‚úÖ Repository dispatch endpoint is working!"
          else
            echo "‚ùå Repository dispatch still failing"
            echo "Response: $body"
          fi
